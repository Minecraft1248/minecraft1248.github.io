<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link" href="https://hexo.io/">Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link" href="https://hexo.io/docs/">documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link" href="https://hexo.io/docs/troubleshooting.html">troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link" href="https://github.com/hexojs/hexo/issues">GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/writing.html">Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/server.html">Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/generating.html">Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/one-command-deployment.html">Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>Redefine 主题使用指南</title>
    <url>/2022/12/24/C++%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%B8%80%E9%97%A8%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<h1 id="C-教程-00-C-究竟是一门什么样的语言"><a href="#C-教程-00-C-究竟是一门什么样的语言" class="headerlink" title="C++教程 #00-C++究竟是一门什么样的语言"></a>C++教程 #00-C++究竟是一门什么样的语言</h1><h2 id="–C-的过去，现在与未来"><a href="#–C-的过去，现在与未来" class="headerlink" title="–C++的过去，现在与未来"></a>–C++的过去，现在与未来</h2><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h2><h3 id="前言中的前言"><a href="#前言中的前言" class="headerlink" title="前言中的前言"></a>前言中的前言</h3><p>在观看这期视频之前，先问自己以下几个问题：</p>
<p>    1.你学习过，或者想要学习C++吗？</p>
<p>在10年前，对这个问题的回答应该大多数都是肯定的，但在现在，大多数人的回答应该都是否定。如果你对这个问题的回答是否定的，那再问自己这样一个问题：</p>
<p>    2.为什么不想&#x2F;没有学习C++，又或者说，C++在你自己看来，究竟是一门什么样的语言？</p>
<p>这个问题可能的回答很多，但是毫无疑问的是，对于一个主要使用Java，Python，Kotlin，Rust的人而言，他们对C++的认识可能是：</p>
<ul>
<li><p>不安全，代码容易非良构（如裸指针，内存泄漏，没有垃圾回收）</p>
</li>
<li><p>不灵活，关键语言设施缺失（如没有反射）</p>
</li>
<li><p>复杂，使用，维护成本高（如模板，多重继承，元编程，内存模型复杂，对C兼容等）</p>
</li>
<li><p>老旧，跟不上时代（如C++标准更新换代慢，语言特性久拖不加，头文件等过时语言特性）</p>
</li>
</ul>
<p>而对于C语言的使用者而言，这种看法又可能是：</p>
<ul>
<li><p>语法风格不一致，不优雅</p>
</li>
<li><p>STL等库的臃肿</p>
</li>
</ul>
<p>我们可以发现，这些评价都是清一色的负面评价，尤其是近几年这种对C++语言的负面评价可谓是层出不穷。这些负面评价很大程度上构成了当代程序员对C++的认识。那么，我想问各位这样一个问题，这些评价真的都对吗？</p>
<p>我相信对于这个问题，大多数人的回答都是“不知道”，但是我们又看到，尤其是初入编程语言的新人，很容易相信这些正确性没有保证，但是看上去又很有道理的评价。这些评价在知乎，贴吧，CSDN，Stackoverflow甚至是B站等网站上层出不穷，其中既有对C++<strong>真实存在问题的合理指责</strong>，也有<strong>单纯为了娱乐的玩梗</strong>，甚至还有<strong>自作聪明的指责实际上并不存在问题的虚空索敌</strong>。而且很明显的一点是，<strong>后面两种相对于前者而言，更加容易获得更多的流量</strong>，这些没什么营养，且部分不正确的言论将C++塑造成一门晦涩难懂，古老落后的语言，并且更为致命的是误导新人，让他们做出不正确的选择，而为了澄清这些问题（尤其是后两者）和引导新人，就是本期视频的目标。</p>
<h3 id="C-相关问题的分析"><a href="#C-相关问题的分析" class="headerlink" title="C++相关问题的分析"></a>C++相关问题的分析</h3><h3 id="想对新人说的一些话"><a href="#想对新人说的一些话" class="headerlink" title="想对新人说的一些话"></a>想对新人说的一些话</h3><h2 id="1-观前提醒"><a href="#1-观前提醒" class="headerlink" title="1.观前提醒"></a>1.观前提醒</h2><p>在开始观看这期视频的正文之前，请注意以下几点：</p>
<p><strong>本视频所讨论的问题大多具有争议性，在发言前请三思，尽量不要将个人情绪带入问题讨论当中。</strong></p>
<p><strong>本视频所讨论的问题大多具有争议性，在发言前请三思，尽量不要将个人情绪带入问题讨论当中。</strong></p>
<p><strong>本视频所讨论的问题大多具有争议性，在发言前请三思，尽量不要将个人情绪带入问题讨论当中。</strong></p>
<p>另外，这期视频主要是面向对C++不熟悉或者没有接触过C++语言的人，这里提供一个小测试，如果你能回答正确下面这个问题，那么这个视频可能对你并没有太大帮助。问题如下：</p>
<p>以下C++代码有没有错误？如果有，其输出的内容是什么？</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ratio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="type">int</span> i&gt;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">foo_</span>&#123;</span><br><span class="line">    <span class="keyword">using</span> bar = ratio_add&lt;<span class="keyword">typename</span> foo_&lt;i - <span class="number">1</span>&gt;::bar, ratio&lt;<span class="number">1</span>, i * i&gt;&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;&gt;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">foo_</span>&lt;<span class="number">1</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">using</span> bar = ratio&lt;<span class="number">1</span>, <span class="number">1</span>&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="type">int</span> i&gt;</span><br><span class="line"><span class="keyword">using</span> foo = <span class="keyword">typename</span> foo_&lt;i&gt;::bar;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">using</span> res = foo&lt;<span class="number">3</span>&gt;;</span><br><span class="line">    cout &lt;&lt; res::num &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; res::den &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>答案：没有错误，输出<code>49/36</code>（此处限于篇幅不予解释）</p>
<h2 id="2-何为C-标准委员会？"><a href="#2-何为C-标准委员会？" class="headerlink" title="2.何为C++标准委员会？"></a>2.何为C++标准委员会？</h2><h2 id="3-C-的古典时代（C-98与C-03）"><a href="#3-C-的古典时代（C-98与C-03）" class="headerlink" title="3.C++的古典时代（C++ 98与C++ 03）"></a>3.C++的古典时代（C++ 98与C++ 03）</h2><h2 id="4-C-11：像一门新语言"><a href="#4-C-11：像一门新语言" class="headerlink" title="4.C++ 11：像一门新语言"></a>4.C++ 11：像一门新语言</h2><h2 id="5-C-14：完善C-11"><a href="#5-C-14：完善C-11" class="headerlink" title="5.C++ 14：完善C++ 11"></a>5.C++ 14：完善C++ 11</h2><h2 id="6-C-17：大海迷航"><a href="#6-C-17：大海迷航" class="headerlink" title="6.C++ 17：大海迷航"></a>6.C++ 17：大海迷航</h2><h2 id="7-C-20：方向之争"><a href="#7-C-20：方向之争" class="headerlink" title="7.C++ 20：方向之争"></a>7.C++ 20：方向之争</h2><h2 id="8-C-23-amp-future：旭日初升还是夕阳余晖？"><a href="#8-C-23-amp-future：旭日初升还是夕阳余晖？" class="headerlink" title="8.C++ 23&amp;future：旭日初升还是夕阳余晖？"></a>8.C++ 23&amp;future：旭日初升还是夕阳余晖？</h2><h2 id="9-结语"><a href="#9-结语" class="headerlink" title="9.结语"></a>9.结语</h2><h2 id="10-致谢和参考文献"><a href="#10-致谢和参考文献" class="headerlink" title="10.致谢和参考文献"></a>10.致谢和参考文献</h2>]]></content>
      <categories>
        <category>C++教程</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
</search>
