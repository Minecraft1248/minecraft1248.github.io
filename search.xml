<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link" href="https://hexo.io/">Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link" href="https://hexo.io/docs/">documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link" href="https://hexo.io/docs/troubleshooting.html">troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link" href="https://github.com/hexojs/hexo/issues">GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/writing.html">Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/server.html">Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/generating.html">Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link" href="https://hexo.io/docs/one-command-deployment.html">Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>C++究竟是一门什么样的语言</title>
    <url>/2022/12/24/C++%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%B8%80%E9%97%A8%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<h1 id="C-究竟是一门什么样的语言"><a href="#C-究竟是一门什么样的语言" class="headerlink" title="C++究竟是一门什么样的语言"></a>C++究竟是一门什么样的语言</h1><h2 id="——C-的过去，现在与未来"><a href="#——C-的过去，现在与未来" class="headerlink" title="——C++的过去，现在与未来"></a>——C++的过去，现在与未来</h2><h2 id="第一部分：前言"><a href="#第一部分：前言" class="headerlink" title="第一部分：前言"></a>第一部分：前言</h2><h3 id="前言中的前言"><a href="#前言中的前言" class="headerlink" title="前言中的前言"></a>前言中的前言</h3><p>在开始这期视频之前，我想先请各位问自己一个问题：</p>
<ul>
<li>你知道C++有什么缺陷吗？</li>
</ul>
<p>这个问题的答案有很多，其中比较有代表性的是：</p>
<ul>
<li><p>不安全（内存泄漏，指针垂悬，重复释放，堆栈溢出等）</p>
</li>
<li><p>低级且老旧（宏，<code>#include</code>等）</p>
</li>
<li><p>复杂且臃肿（泛型，模板，元编程等）</p>
</li>
<li><p>关键语言特性的缺失（没有反射等）</p>
</li>
<li><p>社区分散，部分生态缺失（没有成熟的包管理器，网络生态贫乏等）</p>
</li>
</ul>
<p>我想请各位再仔细思考一下，C++当中的这些缺陷是怎么来的呢？为什么在有如此多的缺陷和如此多潜在的竞争者（通常是新的语言）存在的情况下，可以一直经久不衰，延续到今日呢？</p>
<p>如果你没有办法想明白这个问题，那么这期视频的内容就是为你量身定制的的。</p>
<p>当然，考虑到部分可能甚至没法意识到自己没有认真思考过以上问题的，我也列出了一些不了解C++的（尤其是对这门语言持负面态度的）典型特征：</p>
<ul>
<li><p>简单的认为C++必然被其他语言取代，只将C++经久不衰的原因归结于庞大的代码存量（如不停地向其他人宣传如“C++垃圾，Rust无敌”的观点）</p>
</li>
<li><p>忽略语言的适用领域和语言特征，单纯做语言间无意义比较的（如毫无意义地比较C++和Python写Hello World的速度）</p>
</li>
<li><p>只从一个方面或一个语法上的缺陷或臃肿，否定C++整门语言（如对C++多重继承的批评）</p>
</li>
<li><p>直接否定C++标准委员会及其对C++的改进（典型言论如“C++最大的敌人是不做人的标准委员会！”）</p>
</li>
<li><p>认为C++复杂却不了解C++复杂性的根本来源（如对C++复杂内存模型的批评）</p>
</li>
</ul>
<h3 id="为什么做这期视频？"><a href="#为什么做这期视频？" class="headerlink" title="为什么做这期视频？"></a>为什么做这期视频？</h3><h2 id="第二部分：C-的过去，现在与未来"><a href="#第二部分：C-的过去，现在与未来" class="headerlink" title="第二部分：C++的过去，现在与未来"></a>第二部分：C++的过去，现在与未来</h2><h3 id="2-1-C-的古典时代（Cfront时代，C-98与C-03）"><a href="#2-1-C-的古典时代（Cfront时代，C-98与C-03）" class="headerlink" title="2.1 C++的古典时代（Cfront时代，C++ 98与C++ 03）"></a>2.1 C++的古典时代（Cfront时代，C++ 98与C++ 03）</h3><p>20世纪60年代，AT&amp;T贝尔实验室的一名研究员肯·汤普森（Kenneth Lane Thompson）闲来无事，手痒难耐，他想玩一个自己制作的模拟太阳系航行的电子游戏Space Travel。说到这个游戏，就不得不提一嘴这个游戏的来头：汤普森原本属于一个由贝尔实验室，麻省理工学院和通用电气公司联合开发的Multics系统项目，他的游戏也自然是基于Multics系统，但后来由于贝尔实验室撤出了该项目，汤普森也失去了可以运行自己游戏的平台。上班摸不了鱼了，汤普森很是难受，为了让自己可以愉快的划水，汤普森背着老板找到了一台小型计算机PDP-7。然而，在汤普森以为万事大吉，准备开摸的时候，他发现了一个小问题：PDP-7没有操作系统。这个问题在现在很好解决，毕竟都2022年了，只要跟计算机扯上关系的东西都可以找到一个操作系统。但是在计算机刚刚起步的20世纪60年代，连硬件都没有统一标准，大家都是各干各的，更别提刚有个雏形的操作系统了。于是，为了解决自己上班摸鱼的问题，汤普森决定：没有操作系统没关系，我自己写一个！于是，UNICS系统，也就是日后的UNIX，就如此诞生了。</p>
<p>为了给PDP-7开发操作系统，汤普森还基于当时的一门编程语言BCPL设计了BCPL的精简版，这个语言被称为B语言。在汤普森努力为计算机研究事业献身（大嘘）时，PDP-11出现了，由于当时计算机厂家普遍没有兼容意识，原本在PDP-7上跑的好好的UNICS，放到PDP-11上面就成了废物。为了可以在更好的电脑上为公司创造价值，汤普森与一位同样酷爱Space Travel的同事丹尼斯·里奇（Dennis MacAlistair Ritchie）开始着手将UNICS移植到PDP-11上。在移植过程中，两人发现了一个严重问题：PDP-11提供了不同大小的基本对象，如一个字节长的字符，两字节长的整数和四字节长的浮点数，而用于UNICS系统开发的B语言并不能很好的处理这些对象。面对这个问题，里奇向B语言加入了数据类型的概念，也就是我们在现代语言上习以为常的<code>int</code>,<code>char</code>,<code>bool</code>等，里奇认为这门语言需要一个名字，于是，1972年，C语言产生了。</p>
<p>C语言一经推出，就引爆了整个编程界，C语言当中的大量特性，如静态类型系统，结构化编程，结构体等，在当时看来都是极为先进和新奇的特性。一时间使用C语言成为了计算机圈子当中的一股热潮。早已忘记了自己原来是来上班玩游戏的二人于1978年合作出版了《C程序设计语言》的第一版，事实上也奠定了C语言的惯用标准，这个标准后来被称之为K&amp;R C。</p>
<p>但是随着时间的流逝，C语言作为一门面向过程语言的弊端逐渐显现（如代码复用不方便，大型项目代码组织不方便等）。为了解决C语言所凸显出的面向过程语言的通病，一种叫做面向对象的编程范式逐渐发展起来。</p>
<h3 id="2-2-何为C-标准委员会？"><a href="#2-2-何为C-标准委员会？" class="headerlink" title="2.2 何为C++标准委员会？"></a>2.2 何为C++标准委员会？</h3><h3 id="2-3-C-11：像一门新语言"><a href="#2-3-C-11：像一门新语言" class="headerlink" title="2.3 C++ 11：像一门新语言"></a>2.3 C++ 11：像一门新语言</h3><h3 id="2-4-C-14：完善C-11"><a href="#2-4-C-14：完善C-11" class="headerlink" title="2.4 C++ 14：完善C++ 11"></a>2.4 C++ 14：完善C++ 11</h3><h3 id="2-5-C-17：大海迷航"><a href="#2-5-C-17：大海迷航" class="headerlink" title="2.5 C++ 17：大海迷航"></a>2.5 C++ 17：大海迷航</h3><h3 id="2-6-C-20：方向之争"><a href="#2-6-C-20：方向之争" class="headerlink" title="2.6 C++ 20：方向之争"></a>2.6 C++ 20：方向之争</h3><h3 id="2-7-C-23-amp-future：旭日初升还是夕阳余晖？"><a href="#2-7-C-23-amp-future：旭日初升还是夕阳余晖？" class="headerlink" title="2.7 C++ 23&amp;future：旭日初升还是夕阳余晖？"></a>2.7 C++ 23&amp;future：旭日初升还是夕阳余晖？</h3><h2 id="第三部分：尾声"><a href="#第三部分：尾声" class="headerlink" title="第三部分：尾声"></a>第三部分：尾声</h2><h3 id="3-1-结语"><a href="#3-1-结语" class="headerlink" title="3.1 结语"></a>3.1 结语</h3><h3 id="3-2-致谢和参考文献"><a href="#3-2-致谢和参考文献" class="headerlink" title="3.2 致谢和参考文献"></a>3.2 致谢和参考文献</h3>]]></content>
      <categories>
        <category>C++教程</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
</search>
